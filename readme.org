#+TITLE: A maintained SeqLib for interface to htslib only

[[https://github.com/Zilong-Li/SeqLib/actions/workflows/linux.yml/badge.svg]]
[[https://github.com/Zilong-Li/SeqLib/actions/workflows/mac.yml/badge.svg]]

This is a fork of https://github.com/walaj/SeqLib.

Features :
- only dependency is htslib.
- add =BcfReader= and =BcfWriter= for manipulating VCF/BCF.

* Usage

see more examples in [[https://github.com/Zilong-Li/SeqLib/tree/master/test][test]] folder

** BcfReader

#+begin_src C++
// Parsing VCF with subset samples in target region
BcfReader br("test/chr20.2000001.2100000.vcf.gz", "HG00107,HG00108,HG00109", "chr20:2006060-");
BcfRecord v(br.header);
// supports genotype vector of vector<bool>, vector<char> and vector<int>
vector<bool> gt;
int n = 0;
while (br.GetNextVariant(v))
{
    v.GetGenotypes(gt);
    if (v.isAllPhased) n++; // check if current site is phased for all samples
}
#+end_src

** BcfWriter

1. create an new VCF template then add records

#+begin_src C++
// supports file suffix with bcf, bcf.gz, vcf, vcf.gz
BcfWriter bw("test.vcf");
bw.InitalHeader("VCF4.3");
bw.header.AddFormat("GT", "1", "String", "Genotype");
bw.header.AddInfo("AF", "A", "Float", "Estimated allele frequency in the range (0,1)");
bw.header.AddContig("chr20");
bw.header.AddSample("NA12878");
bw.WriteLine("chr20\t2006060\trs146931526\tG\tC\t100\tPASS\tAF=0.000998403\tGT\t1|0");
#+end_src

2. use another VCF as template then add records

#+begin_src C++
BcfReader br("./htslib/test/test-vcf-hdr-in.vcf");
BcfRecord v(br.header);
BcfWriter bw("test.vcf");
bw.InitalHeader(br.header);
bw.WriteHeader();
br.GetNextVariant(v);
bw.WriteRecord(v);
#+end_src

* Installation

For a quick and full installation, just do

#+begin_src shell
git clone --recursive https://github.com/Zilong-Li/SeqLib.git
cd SeqLib
autoreconf -i # build the configure script and install files it uses
./configure
make
#+end_src

Now you can integrate SeqLib into your project as the following:

#+begin_src shell
SEQ=<path_to_seqlib_git_repos>
C_INCLUDE_PATH=$C_INCLUDE_PATH:$SEQ:$SEQ/htslib
LDFLAGS="$LDFLAGS $SEQ/src/libseqlib.a -lhts -L$SEQ/htslib"
#+end_src

Since the newest htslib supports reading BAM with url links in default, remember to then link any projects made with SeqLib with the additional =-lcurl= flags.

However, you can disable support for reading BAM etc with HTTPS, FTP, S3, Google Cloud and so on by the following:

#+begin_src shell
git clone --recursive https://github.com/Zilong-Li/SeqLib.git
cd SeqLib/htslib # go in htslib
./configure --disable-libcurl
cd .. # back to seqlib
autoreconf -i # build the configure script and install files it uses
./configure
make
#+end_src

